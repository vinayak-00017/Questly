# Multi-stage Dockerfile with PM2 for advanced Node.js process management
FROM node:18-alpine AS base

# Install dependencies only when needed
FROM base AS deps
RUN apk add --no-cache libc6-compat
WORKDIR /app

# Install dependencies based on the preferred package manager
COPY package.json pnpm-lock.yaml* pnpm-workspace.yaml ./
COPY apps/api/package.json ./apps/api/
COPY apps/web/package.json ./apps/web/
COPY packages/*/package.json ./packages/*/

RUN corepack enable pnpm && pnpm i --frozen-lockfile

# Rebuild the source code only when needed
FROM base AS builder
WORKDIR /app
COPY --from=deps /app/node_modules ./node_modules
COPY . .

# Build the applications
RUN corepack enable pnpm && pnpm build

# API with PM2
FROM base AS api
WORKDIR /app

# Install PM2 globally
RUN npm install pm2 -g

# Create questly user
RUN addgroup --system --gid 1001 nodejs
RUN adduser --system --uid 1001 questly

# Copy built application
COPY --from=builder --chown=questly:nodejs /app/apps/api/dist ./apps/api/dist
COPY --from=builder --chown=questly:nodejs /app/node_modules ./node_modules
COPY --from=builder --chown=questly:nodejs /app/package.json ./package.json
COPY --from=builder --chown=questly:nodejs /app/ecosystem.config.js ./ecosystem.config.js

# Create log directory
RUN mkdir -p /var/log/questly && chown questly:nodejs /var/log/questly

USER questly

EXPOSE 3001

ENV NODE_ENV=production
ENV PORT=3001

# Use PM2 to start the API
CMD ["pm2-runtime", "start", "ecosystem.config.js", "--only", "questly-api"]

# Web with PM2
FROM base AS web
WORKDIR /app

# Install PM2 globally
RUN npm install pm2 -g

# Create questly user
RUN addgroup --system --gid 1001 nodejs
RUN adduser --system --uid 1001 questly

# Copy built application
COPY --from=builder --chown=questly:nodejs /app/apps/web/.next/standalone ./apps/web/
COPY --from=builder --chown=questly:nodejs /app/apps/web/.next/static ./apps/web/.next/static
COPY --from=builder --chown=questly:nodejs /app/apps/web/public ./apps/web/public
COPY --from=builder --chown=questly:nodejs /app/ecosystem.config.js ./ecosystem.config.js

# Create log directory
RUN mkdir -p /var/log/questly && chown questly:nodejs /var/log/questly

USER questly

EXPOSE 3000

ENV NODE_ENV=production
ENV PORT=3000

# Use PM2 to start the web app
CMD ["pm2-runtime", "start", "ecosystem.config.js", "--only", "questly-web"]
